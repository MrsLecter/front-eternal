import WrapperCentring from "@/wrappers/WrapperCentring";
import { InferGetServerSidePropsType } from "next";

import Head from "next/head";
import React from "react";
import { ISoulInfo } from "@/api/souls-service-types";
import client from "@/api/apollo-client";
import { ISoulsResponse } from "@/api/souls-service-types";
import { gql } from "@apollo/client";
import soulsQuery from "@/api/souls-query";

export async function getServerSideProps() {
  const { data } = await client.query({
    query: soulsQuery.getAllSouls,
  });
  console.log(data, "ssr");

  return {
    props: {
      allSoulsData: data,
    },
  };
}

interface ISampleProps {
  data: InferGetServerSidePropsType<typeof getServerSideProps>;
}

function Sample({
  allSoulsData,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  console.log("props", allSoulsData);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WrapperCentring>
        hello world
        {allSoulsData.souls &&
          allSoulsData.souls.map((item: ISoulInfo) => {
            return <div key={item.id}>{item.name}</div>;
          })}
      </WrapperCentring>
    </>
  );
}

export default Sample;
