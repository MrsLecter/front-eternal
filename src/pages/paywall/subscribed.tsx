import Head from "next/head";
import Image from "next/image";
import WrapperCentring from "@/componets/common/wrappers/WrapperCentring";
import WrapperModal from "@/componets/common/wrappers/WrapperModal";
import FreeOfferBlock from "@/componets/paywall/FreeOfferBlock";
import ProOfferBlock from "@/componets/paywall/ProOfferBlock";
import styled from "styled-components";
import individualsImage from "@images/individuals.png";
import CardpayBlock from "@/componets/paywall/CardpayBlock";
import SubscribedBlock from "@/componets/paywall/SubscribedBlock";
import StaticIndividuals from "@/componets/paywall/elements/StaticIndividuals";
import WrapperBackground from "@/componets/common/wrappers/WrapperBakground";
import HeaderModal from "@/componets/common/headerModal/HeaderModal";
import TitleMedium from "@/componets/common/title/TitleMedium";
import SoulsIntro from "@/componets/common/soulsIntro/SoulsIntro";
import { userSlice } from "@/store/reducers/userSlice";
import { StorageCellEnum } from "@/constants/common";
import { useAppDispatch } from "@/hooks/reducers.hook";
import { useEffect } from "react";
import { ILocalStorageData } from "../../../types/common.types";

const Paywall: React.FC = () => {
  const { signin } = userSlice.actions;
  const dispatch = useAppDispatch();

  useEffect(() => {
    let localData = localStorage.getItem(StorageCellEnum.USER);
    if (localData) {
      const parsedData: ILocalStorageData = JSON.parse(localData);
      dispatch(
        signin({
          id: parsedData.id,
          email: parsedData.email,
          name: parsedData.name!,
          phone: parsedData.phone!,
          nextPayment: parsedData.nextpayment as string,
          questionsAmount: parsedData.questionsamount,
          readAbout: parsedData.readabout,
          shareLink: !!parsedData.shareLink,
        })
      );
    }
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <WrapperCentring>
        <HeaderModal />
        <WrapperContent>
          <WrapperModal
            width={"625"}
            isPayment={true}
            isPaddingSmall={true}
            minHeight={243}
            maxHeight={355}
          >
            <SubscribedBlock />
          </WrapperModal>
        </WrapperContent>

        <StaticIndividuals />
        <SoulsIntro />
        <WrapperBackground />
      </WrapperCentring>
    </>
  );
};

const WrapperContent = styled.div`
  /* width: 100%; */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

  @media (max-width: 375px) {
    width: 343px;
    justify-content: flex-start;

    & > div:first-child {
      margin-bottom: 16px;
    }
  }
`;

export default Paywall;
